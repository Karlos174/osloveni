configs = {
    "python" :
        {
            "filesuffix"           : ".py",
            "commentstart"         : "'''",
            "commentend"           : "'''",
            "indent"               : "    ",
            "blockstart"           : "",
            "blockend"             : "",
            "function"             : "def {fnname}({var}):",
            "var"                  : "{varname}",
            "if"                   : "if {cond}:",
            "elseif"               : "elif {cond}:",
            "else"                 : "else:",
            "switchsupport"        : False,
            "assignement"          : "{var} = {exp}",
            "conditional"          : "{exp1} if {cond} else {exp2}",
            "equal"                : "{exp1} == {exp2}",
            "and"                  : "{exp1} and {exp2}",
            "or"                   : "{exp1} or {exp2}",
            "charquote"            : "'",
            "strquote"             : "'",
            "return"               : "return {exp}",
            "charatpos"            : "{var}[{pos}]",
            "leftstr"              : "{var}[:{length}]",
            "rightstr"             : "{var}[-{length}:]",
            "lowercase"            : "{var}.lower()",
            "uppercase"            : "{var}.upper()",
            "titlecase"            : "{var}.title()",
            "islowercase"          : "{var}.islower()",
            "isuppercase"          : "{var}.isupper()",
            "istitlecase"          : "{var}.istitle()",
            "concat"               : "{str1} + {str2}",
            "tuple"                : "({exp1}, {exp2})",
            "strlen"               : "len({var})",
            "strnegativepos"       : True,
            "fetchcharoptimization": True,
            "funcdoc"              : "\"\"\"Vrací pátý pád jména k prvnímu pádu\n\nArgumenty:\njmeno -- první pád jména\n\"\"\"",
            "docinsidefunction"    : True,
        },
    "php" :
        {
            "filesuffix"           : ".php",
            "filestart"            : "<?php",
            "fileend"              : "?>",
            "commentstart"         : "/*",
            "commentend"           : "*/",
            "indent"               : "\t",
            "blockstart"           : "{",
            "blockend"             : "}",
            "function"             : "function {fnname}({var}) {{",
            "functionend"          : "}",
            "var"                  : "${varname}",
            "if"                   : "if ({cond}) {{",
            "elseif"               : "}} elseif ({cond}) {{",
            "else"                 : "} else {",
            "endif"                : "}",
            "switchsupport"        : True,
            "switch"               : "switch ({var}) {{",
            "endswitch"            : "}",
            "case"                 : "case {exp}:",
            "endcase"              : "\tbreak;",
            "default"              : "default:",
            "enddefault"           : False,
            "assignement"          : "{var} = {exp};",
            "conditional"          : "{cond} ? {exp1} : {exp2}",
            "equal"                : "{exp1} == {exp2}",
            "and"                  : "{exp1} && {exp2}",
            "or"                   : "{exp1} || {exp2}",
            "charquote"            : "'",
            "strquote"             : "\"",
            "return"               : "return {exp};",
            "charatpos"            : "{var}[{pos}]",
            "strlen"               : "strlen({var})",
            "leftstr"              : "substr({var}, 0, {length})",
            "rightstr"             : "substr({var}, -{length})",
            "lowercase"            : "mb_convert_case({var}, MB_CASE_LOWER, \"UTF-8\")",
            "uppercase"            : "mb_convert_case({var}, MB_CASE_UPPER, \"UTF-8\")",
            "titlecase"            : "mb_convert_case({var}, MB_CASE_TITLE, \"UTF-8\")",
            "islowercase"          : "mb_convert_case({var}, MB_CASE_LOWER) == {var}",
            "isuppercase"          : "mb_convert_case({var}, MB_CASE_UPPER) == {var}",
            "istitlecase"          : "preg_match(\"/^[A-ZÁČĎÉÍŇÓŘŠŤÚÝŽ][a-záčďéěíňóřšťúůýž]*$/u\", {var})",
            "concat"               : "{str1} . {str2}",
            "tuple"                : "[{exp1}, {exp2}]",
            # "tuple"                : "array({exp1}, {exp2})",   # PHP < 5.4
            "strnegativepos"       : False,
            "fetchcharoptimization": True,
            "funcdoc"              : "/**\n * Vrací pátý pád jména k prvnímu pádu\n * @param string $jmeno první pád jména\n*/",
            "docinsidefunction"    : False,
        },
    "javascript" :
        {
            "filesuffix"           : ".js",
            "commentstart"         : "/*",
            "commentend"           : "*/",
            "indent"               : "\t",
            "blockstart"           : "{",
            "blockend"             : "}",
            "function"             : "function {fnname}({var}) {{",
            "functionend"          : "}",
            "var"                  : "{varname}",
            "vardeclaration"       : "var {var};",
            "if"                   : "if ({cond}) {{",
            "elseif"               : "}} else if ({cond}) {{",
            "else"                 : "} else {",
            "endif"                : "}",
            "switchsupport"        : True,
            "switch"               : "switch ({var}) {{",
            "endswitch"            : "}",
            "case"                 : "case {exp}:",
            "endcase"              : "\tbreak;",
            "default"              : "default:",
            "enddefault"           : False,
            "assignement"          : "{var} = {exp};",
            "conditional"          : "{cond} ? {exp1} : {exp2}",
            "equal"                : "{exp1} == {exp2}",
            "and"                  : "{exp1} && {exp2}",
            "or"                   : "{exp1} || {exp2}",
            "charquote"            : "'",
            "strquote"             : "\"",
            "return"               : "return {exp};",
            "charatpos"            : "{var}.charAt({pos})",
            "strlen"               : "{var}.length",
            "leftstr"              : "{var}.substr(0, {length})",
            "rightstr"             : "{var}.substr({var}.length - {length})",
            "lowercase"            : "{var}.toLowerCase()",
            "uppercase"            : "{var}.toUpperCase()",
            "titlecase"            : "{var}.replace(/\w\S*/g, function(txt){{return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}})",
            "islowercase"          : "{var}.toLowerCase() == {var}",
            "isuppercase"          : "{var}.toUpperCase() == {var}",
            "istitlecase"          : "{var}.match(/^[A-ZÁČĎÉÍŇÓŘŠŤÚÝŽ][a-záčďéěíňóřšťúůýž]*$/u)",
            "concat"               : "{str1} + {str2}",
            "tuple"                : "[{exp1}, {exp2}]",
            "strnegativepos"       : False,
            "fetchcharoptimization": True,
            "funcdoc"              : "/**\n * Vrací pátý pád jména k prvnímu pádu\n * @param {String} jmeno první pád jména\n*/",
            "docinsidefunction"    : False,
        },
    "micropython" :
        {
            "filesuffix"           : ".py",
            "commentstart"         : "'''",
            "commentend"           : "'''",
            "indent"               : "    ",
            "blockstart"           : "",
            "blockend"             : "",
            "function"             : "def {fnname}({var}):",
            "var"                  : "{varname}",
            "if"                   : "if {cond}:",
            "elseif"               : "elif {cond}:",
            "else"                 : "else:",
            "switchsupport"        : False,
            "assignement"          : "{var} = {exp}",
            "conditional"          : "{exp1} if {cond} else {exp2}",
            "equal"                : "{exp1} == {exp2}",
            "and"                  : "{exp1} and {exp2}",
            "or"                   : "{exp1} or {exp2}",
            "charquote"            : "'",
            "strquote"             : "'",
            "return"               : "return {exp}",
            "charatpos"            : "{var}[{pos}]",
            "leftstr"              : "{var}[:{length}]",
            "rightstr"             : "{var}[-{length}:]",
            "lowercase"            : "{var}.lower()",
            "uppercase"            : "{var}.upper()",
            "titlecase"            : "{var}[0].upper() + {var}[1:].lower()",
            "islowercase"          : "{var}.islower()",
            "isuppercase"          : "{var}.isupper()",
            "istitlecase"          : "{var}[0].isupper() and {var}[1:].islower()",
            "concat"               : "{str1} + {str2}",
            "tuple"                : "({exp1}, {exp2})",
            "strlen"               : "len({var})",
            "strnegativepos"       : True,
            "fetchcharoptimization": True,
            "funcdoc"              : "\"\"\"Vrací pátý pád jména k prvnímu pádu\n\nArgumenty:\njmeno -- první pád jména\n\"\"\"",
            "docinsidefunction"    : True,
        },
}
